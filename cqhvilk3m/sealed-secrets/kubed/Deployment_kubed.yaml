# Source: kubed/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubed
  namespace: kube-system
  labels:
    helm.sh/chart: kubed-v0.12.0-rc.3
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: kubed
    app.kubernetes.io/version: "v0.12.0-rc.3"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubed
      app.kubernetes.io/instance: kubed
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubed
        app.kubernetes.io/instance: kubed
      annotations:
        checksum/apiregistration.yaml: 94cd59b74cede26699cd288d00e76f1355cea95da39a175b36e8039825482a9f
    spec:
      serviceAccountName: kubed
      containers:
      - name: kubed
        securityContext:
          {}
        image: appscode/kubed:v0.12.0-rc.3
        imagePullPolicy: IfNotPresent
        args:
        - run
        - --v=3
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --use-kubeapiserver-fqdn-for-aks=true
        - --enable-analytics=true
        - --cluster-name=unicorn
        ports:
        - containerPort: 8443
        resources:
          {}
        volumeMounts:
        - name: config
          mountPath: /srv/kubed
        - name: scratch
          mountPath: /tmp
        - mountPath: /var/serving-cert
          name: serving-cert
      volumes:
      - name: config
        secret:
          secretName: kubed
      - name: scratch
        emptyDir: {}
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: kubed-apiserver-cert
      securityContext:
        fsGroup: 65535

